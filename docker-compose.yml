version: "3.8"

services:
  gql_events:
      image: gql_events
      build:
        # context definuje cestu k popisu
        context: ./
      environment:
        # promenne, ktere lze cist v kontejneru
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=example
        - POSTGRES_HOST=postgres:5432
        - POSTGRES_DB=data
        - DEMO=true
      healthcheck:
        # definice, umoznujici provest test, zda je kontejner v poradku
        test: "curl -f -H 'Content-Type: application/json' -X POST -d '{\"query\":\"query{__schema{types{name}}}\"}' http://localhost:8000/gql/ || exit 1"
        interval: 60s
        retries: 3
        start_period: 60s
        timeout: 10s
      deploy:
        restart_policy:
          condition: on-failure
          max_attempts: 3
      depends_on:
        - postgres

  postgres:
      image: postgres
      environment:
        # promenne, ktere lze cist v kontejneru
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=example
        - POSTGRES_DB=data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 60s
        timeout: 10s
        retries: 5
      deploy:
        restart_policy:
          condition: on-failure
          max_attempts: 3
      ports:
         - "5432:5432"

  pgadmin:
      image: dpage/pgadmin4
      restart: always
      environment:
        # promenne, ktere lze cist v kontejneru
        - PGADMIN_DEFAULT_EMAIL=git@gud.com
        - PGADMIN_DEFAULT_PASSWORD=casul
      healthcheck:
        test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
        interval: 60s
        timeout: 10s
        retries: 5
      ports:
        - "31122:80"